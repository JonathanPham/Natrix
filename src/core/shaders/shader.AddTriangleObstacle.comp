
#version 430

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

uvec2 _Size;

layout(std430) buffer xst__Obstacles
{
    vec2 _Obstacles[];
};

uniform int _Static;

uniform vec2 _P1;

uniform vec2 _P2;

uniform vec2 _P3;

float Sign(vec2 p1, vec2 p2, vec2 p3)
{
    return ((p1.x - p3.x) * (p2.y - p3.y)) - ((p2.x - p3.x) * (p1.y - p3.y));
}

bool IsPointInTriangle(vec2 pt, vec2 v1, vec2 v2, vec2 v3)
{
    const bool b1 = Sign(pt, v1, v2) < 0.0f;
    const bool b2 = Sign(pt, v2, v3) < 0.0f;
    const bool b3 = Sign(pt, v3, v1) < 0.0f;
    return (b1 == b2) && (b2 == b3);
}

void main()
{
    if (gl_GlobalInvocationID.x >= _Size.x || gl_GlobalInvocationID.y >= _Size.y)
    {
        return;
    }
    const vec2 pt = vec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y) / vec2(_Size);
    if (IsPointInTriangle(pt, _P1, _P2, _P3))
    {
        const uint pos = gl_GlobalInvocationID.y * _Size.x + gl_GlobalInvocationID.x;
        if (_Static > 0)
        {
            _Obstacles[pos].y = 1.0f;
        }
        else
        {
            _Obstacles[pos].x = 1.0f;
        }
    }
}

