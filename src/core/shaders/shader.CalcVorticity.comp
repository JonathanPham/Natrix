
#version 310 es

layout(local_size_x = {{ NUM_THREADS }}, local_size_y = {{ NUM_THREADS }}, local_size_z = 1) in;

uniform uvec2 _Size;

layout(std430, binding={{ VELOCITY_IN }}) buffer xst__VelocityIn
{
    vec2 _VelocityIn[];
};

layout(std430, binding={{ VORTICITY }}) buffer xst__Vorticity
{
    float _Vorticity[];
};

{% include 'tmpl.GetNeighbours.comp' %}

void main()
{
    if (gl_GlobalInvocationID.x >= _Size.x || gl_GlobalInvocationID.y >= _Size.y)
    {
        return;
    }
    uint pos = gl_GlobalInvocationID.y * _Size.x + gl_GlobalInvocationID.x;
    uvec4 n = GetNeighbours(ivec2(gl_GlobalInvocationID.xy), ivec2(_Size));
    vec2 vL = _VelocityIn[n.x];
    vec2 vR = _VelocityIn[n.y];
    vec2 vB = _VelocityIn[n.z];
    vec2 vT = _VelocityIn[n.w];
    _Vorticity[pos] = 0.5f * ((vR.y - vL.y) - (vT.x - vB.x));
}

