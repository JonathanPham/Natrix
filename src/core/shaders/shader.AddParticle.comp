
#version 430

layout(local_size_x = {{ NUM_THREADS }}, local_size_y = {{ NUM_THREADS }}, local_size_z = 1) in;

layout(std430, binding={{ PARTICLES_IN }}) buffer xst__ParticlesIn
{
    float _ParticlesIn[];
};

layout(std430, binding={{ PARTICLES_OUT }}) buffer xst__ParticlesOut
{
    float _ParticlesOut[];
};

uniform float _Radius;

uniform vec2 _Position;

uniform float _Value;

uniform uvec2 _ParticleSize;

void main()
{
    if (gl_GlobalInvocationID.x >= _ParticleSize.x || gl_GlobalInvocationID.y >= _ParticleSize.y)
    {
        return;
    }
    const uint pos = gl_GlobalInvocationID.y * _ParticleSize.x + gl_GlobalInvocationID.x;
    const vec2 splat_pos = _Position * vec2(_ParticleSize);
    const float val = _ParticlesIn[pos];
    float result = val;
    float len = distance(splat_pos, vec2(gl_GlobalInvocationID));
    if (len <= _Radius)
    {
        result = clamp(val + _Value * (_Radius - len) / _Radius, 0.0f, 255.0f);
    }
    //result = clamp(val + _Value * (_Radius - len) / _Radius, 0.0f, 255.0f);
    _ParticlesOut[pos] = result;
}

