
#version 310 es

layout(local_size_x = {{ NUM_THREADS }}, local_size_y = {{ NUM_THREADS }}, local_size_z = 1) in;

uniform uvec2 _Size;

layout(std430, binding={{ VELOCITY_IN }}) buffer xst__VelocityIn
{
    vec2 _VelocityIn[];
};

layout(std430, binding={{ VELOCITY_OUT }}) buffer xst__VelocityOut
{
    vec2 _VelocityOut[];
};


{% include 'tmpl.GetNeighbours.comp' %}

uniform float _Alpha;

uniform float _rBeta;

void main()
{
    if (gl_GlobalInvocationID.x >= _Size.x || gl_GlobalInvocationID.y >= _Size.y)
    {
        return;
    }
    uint pos = gl_GlobalInvocationID.y * _Size.x + gl_GlobalInvocationID.x;
    uvec4 n = GetNeighbours(ivec2(gl_GlobalInvocationID.xy), ivec2(_Size));
    vec2 x1 = _VelocityIn[n.x];
    vec2 x2 = _VelocityIn[n.y];
    vec2 y1 = _VelocityIn[n.z];
    vec2 y2 = _VelocityIn[n.w];
    vec2 b = _VelocityIn[pos];
    _VelocityOut[pos] = (x1 + x2 + y1 + y2 + b * _Alpha) * _rBeta;
}

