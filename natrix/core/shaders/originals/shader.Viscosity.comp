
#include "bgfx_compute.sh"
#include "constants.sh"

uniform vec2 _Size;

BUFFER_RO(_VelocityIn, vec2, 1);

BUFFER_WR(_VelocityOut, vec2, 2);

uniform float _Alpha;

uniform float _rBeta;

#include "common.sh"

NUM_THREADS(GROUP_SIZE, GROUP_SIZE, 1)
void main()
{
    if (gl_GlobalInvocationID.x >= _Size.x || gl_GlobalInvocationID.y >= _Size.y)
    {
        return;
    }
    uint pos = gl_GlobalInvocationID.y * _Size.x + gl_GlobalInvocationID.x;
    uvec4 n = GetNeighbours(ivec2(gl_GlobalInvocationID.xy), ivec2(_Size));
    vec2 x1 = _VelocityIn[n.x];
    vec2 x2 = _VelocityIn[n.y];
    vec2 y1 = _VelocityIn[n.z];
    vec2 y2 = _VelocityIn[n.w];
    vec2 b = _VelocityIn[pos];
    _VelocityOut[pos] = (x1 + x2 + y1 + y2 + b * _Alpha) * _rBeta;
}

