
#include "bgfx_compute.sh"

uniform vec4 _Size;

BUFFER_RO(_VelocityIn, vec4, 0);

BUFFER_WR(_VelocityOut, vec4, 1);

uniform vec4 _Radius;

uniform vec4 _Position;

uniform vec4 _Value;

#define GROUP_SIZE 512

NUM_THREADS(GROUP_SIZE, 1, 1)
void main()
{
    if (gl_GlobalInvocationID.x >= _Size.x || gl_GlobalInvocationID.y >= _Size.y)
    {
        return;
    }
    uint pos = gl_GlobalInvocationID.y * _Size.x + gl_GlobalInvocationID.x;
    vec4 splat_pos = _Position * vec4(_Size);
    vec4 val = _VelocityIn[pos];
    vec4 result = val;
    float len = distance(splat_pos, vec4(gl_GlobalInvocationID.xy, 0, 0));
    if (len <= _Radius.x)
    {
        result = val + _Value * (_Radius - len) / _Radius;
    }
    _VelocityOut[pos] = clamp(result, vec4(-1.0, -1.0, 0, 0), vec4(1.0, 1.0, 0, 0));
}

